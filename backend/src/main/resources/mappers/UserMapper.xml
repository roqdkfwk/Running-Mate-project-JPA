<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suseok.run.model.dao.UserDao">

	<select id="loginUser" parameterType="User" resultType="User">
		SELECT * FROM User WHERE user_id = #{userId} AND user_pwd = #{userPwd}
	</select>

	<insert id="signup" parameterType="User">
		INSERT INTO User (user_id, user_pwd, user_name, user_nick, email, address,
		img, phone, exposure)
		VALUES (#{userId}, #{userPwd}, #{userName}, #{userNick}, #{email},
		#{address}, #{img}, #{phone}, #{exposure})
	</insert>

	<select id="selectById" parameterType="String" resultType="User">
		SELECT * FROM User WHERE user_id = #{userId}
	</select>
	
	<select id="selectBySeq" parameterType="int" resultType="User">
		SELECT * FROM User WHERE user_seq = #{userSeq}
	</select>

	<select id="selectByNick" parameterType="String" resultType="User">
		SELECT * FROM User WHERE user_nick = #{userNick}
	</select>
	
	<select id="selectAll">
		select * from user
	</select>

	<update id="update" parameterType="User">
		UPDATE User
		SET user_pwd = #{userPwd}, user_name = #{userName}, user_nick =
		#{userNick}, email = #{email},
		address = #{address}, img = #{img}, phone = #{phone}, exposure = #{exposure}
		WHERE user_id = #{userId}
	</update>

	<insert id="addRival">
		INSERT INTO Rival_info (user_seq, rival_seq) VALUES (#{userSeq}, #{rivalSeq})
	</insert>

	<select id="search" parameterType="String" resultType="User">
		SELECT * FROM User WHERE user_id LIKE CONCAT('%', #{con}, '%')
		OR user_name LIKE CONCAT('%', #{con}, '%')
		OR user_nick LIKE CONCAT('%', #{con}, '%')
	</select>

	<delete id="delete" parameterType="String">
		DELETE FROM User WHERE user_id = #{userId}
	</delete>

	<select id="findId" parameterType="map" resultType="String">
		SELECT user_id
		FROM User
		WHERE user_name = #{name}
		  AND (phone = #{phoneOrEmail}
		       OR email = #{phoneOrEmail})
	</select>

	<select id="findPwd" parameterType="map" resultType="User">
		SELECT * FROM User WHERE user_name = #{name} AND (phone = #{phoneOrEmail} OR
		email = #{phoneOrEmail}) AND user_id = #{id}
	</select>

	<select id="findByEmail" parameterType="String" resultType="Integer">
		SELECT user_seq
		FROM User
		WHERE email = #{email}
	</select>

</mapper>
